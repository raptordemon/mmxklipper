# This file contains common pin mappings for the Mingda Magician X
# Magician X To use this config, the firmware should be compiled for the
# STM32F407 with a "64KiB bootloader" and USB communication PA11/PA12 it will connect to the USB A port.
#usart3 will connect to the esp01 header

# The "make flash" command does not work on the Mingda. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the Printer
# with that SD card.

# See docs/Config_Reference.md for a description of parameters.
#stm32 f407 64kb bootloader and 8mhz clock usb a

[include macros.cfg]
[include mainsail.cfg]

[stepper_x] #TMC2208
step_pin: PD2
dir_pin: PC10
enable_pin: !PD3
microsteps: 16
rotation_distance: 40
endstop_pin: !PF12
position_endstop: 0
position_max: 230
homing_speed: 50

[tmc2208 stepper_x] #TMC2208
uart_pin: PD6
#tx_pin: PD6
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y] #TMC2208
step_pin: PA10
dir_pin: !PA9
enable_pin: !PC12
microsteps: 16
rotation_distance: 40
endstop_pin: !PF14
position_endstop: 0
position_max: 230
homing_speed: 50

[tmc2208 stepper_y] #TMC2208
uart_pin: PC11
#tx_pin: PC11
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z] #TMC2208
step_pin: PG4
dir_pin: !PG3
enable_pin: !PC9
microsteps: 16
rotation_distance: 4
endstop_pin: !PG0
#endstop_pin: probe:z_virtual_endstop
position_min: -10 # The Z carriage may need to travel below the Z=0
                 # homing point if the bed has a significant tilt.
position_max: 260

[tmc2208 stepper_z] #TMC2208
uart_pin: PG6
#tx_pin: PC10
#uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z1]
step_pin: PG8
dir_pin: !PG7
enable_pin: !PG5
microsteps: 16
rotation_distance: 4

[tmc2208 stepper_z1]
uart_pin: PA8
#tx_pin: PA8
#uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[extruder]
step_pin: PD12
dir_pin: !PD11
enable_pin: !PD13
microsteps: 16
rotation_distance: 8
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC6
sensor_type: EPCOS 100K B57560G104F #60 : 100k Maker's Tool Works Kapton Bed Thermistor beta=3950
sensor_pin: PC4 
min_temp: 0
max_temp: 250

[tmc2208 extruder]
uart_pin: PG2
#tx_pin: PC10
uart_address: 0
run_current: 0.650
stealthchop_threshold: 999999

[gcode_macro Enable_Probe]
gcode: 
  SET_PIN PIN=probe_ctrl VALUE=1

[gcode_macro Deactivate_Probe]
gcode:
  SET_PIN PIN=probe_ctrl VALUE=0

[probe]
pin: !PB0
activate_gcode: Enable_Probe
deactivate_gcode: Deactivate_Probe

[safe_z_home]
home_xy_position: 115, 115
speed: 50
z_hop: 15
z_hop_speed: 5

[bed_mesh]
speed: 120
mesh_min: 10, 10
mesh_max: 220, 220
probe_count: 5,5
algorithm: bicubic
samples: 3
samples_result: average

[z_tilt]
z_positions:
  20,115
  215,115

points:
  20,115
  215,115

speed: 50
horizontal_move_z: 5
retries: 10
retry_tolerance: 0.05

[heater_bed]
heater_pin: PC8
sensor_type: ATC Semitec 104GT-2 #60 : 100k Maker's Tool Works Kapton Bed Thermistor beta=3950
sensor_pin: PC5
min_temp: 0
max_temp: 110

[fan]
pin: PC7

[output_pin probe_ctrl] 
#this turns on and off the probe
pin: PB1

[mcu]
#USB
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx
restart_method: command

#usart3
#serial: /dev/ttyAMA0
#restart_method: command

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 800
max_z_velocity: 4
max_z_accel: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

[filament_switch_sensor toolhead_runout]
pause_on_runout: FALSE
runout_gcode: {action_respond_info("RUNOUT: Toolhead Filament runout")}
insert_gcode: {action_respond_info("RUNOUT: Toolhead Filament inserted")}
switch_pin: ^PG1

[neopixel my_neopixel]
pin:PB9
chain_count:6 #number of leds
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0

#[board_pins]
#aliases:
    # EXP1 header
  #  EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
   # EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>


#marlin configs dump
#define X_ENABLE_PIN       PD3
#define X_STEP_PIN         PD2
#define X_DIR_PIN          PC10
#define Y_ENABLE_PIN       PC12
#define Y_STEP_PIN         PA10
#define Y_DIR_PIN          PA9
#define Z_ENABLE_PIN       PC9
#define Z_STEP_PIN         PG8
#define Z_DIR_PIN          PG7
#define E0_ENABLE_PIN      PD13
#define E0_STEP_PIN        PD12
#define E0_DIR_PIN         PD11
#define Z2_ENABLE_PIN      PG5
#define Z2_STEP_PIN        PG4
#define Z2_DIR_PIN         PG3
#define LED_RED_PIN        PG9
#define Z_MIN_PIN          PG0
#define Y_MIN_PIN          PF14
#define X_MIN_PIN          PF12
#define Z_MIN_PROBE_PIN    PB0

#TMC2208 UARTS
#define X_SERIAL_TX_PIN  PD6
#define X_SERIAL_RX_PIN  PD6

#define Y_SERIAL_TX_PIN  PC11
#define Y_SERIAL_RX_PIN  PC11

#define Z_SERIAL_TX_PIN  PA8
#define Z_SERIAL_RX_PIN  PA8

#define E0_SERIAL_TX_PIN PG2
#define E0_SERIAL_RX_PIN PG2

#define Z2_SERIAL_TX_PIN PG6
#define Z2_SERIAL_RX_PIN PG6



#define CALIB_PIN          PB1
#PS_ON_PIN        PA1
#TEMP_CHAMBER_PIN                  PC3 
#define USB_CONNECT_PIN    PA15
#define USB_CONNECT_INVERTING false
#define SD_DETECT_PIN      PE3
#define BEEPER_PIN         PG11
#define LED_PIN            PG9
#define NEOPIXEL_PIN       PB9
#define SDIO_D0_PIN                         PA6
#define SDIO_D1_PIN                         PC9
#define SDIO_D2_PIN                         PC10
#define SDIO_D3_PIN                         PA4
#define SDIO_CK_PIN                         PA5
#define SDIO_CMD_PIN                        PA7
#define ESP_WIFI_MODULE_COM                    6  // Must also set either SERIAL_PORT or SERIAL_PORT_2 to this
#define ESP_WIFI_MODULE_BAUDRATE        BAUDRATE  // Must use same BAUDRATE as SERIAL_PORT & SERIAL_PORT_2
#define ESP_WIFI_MODULE_RESET_PIN           PE5
#define ESP_WIFI_MODULE_ENABLE_PIN          PE4
#define ESP_WIFI_MODULE_GPIO0_PIN           ESP_WIFI_MODULE_ENABLE_PIN
#define LCD_BACKLIGHT_PIN   PG10
#define FSMC_CS_PIN         PD7   // FSMC_NE1
#define FSMC_RS_PIN         PE2   // A23 Register. Only one address needed
#define TFT_CS_PIN          FSMC_CS_PIN
#define TFT_RS_PIN          FSMC_RS_PIN
#define TFT_BACKLIGHT_PIN   LCD_BACKLIGHT_PIN
#define LCD_USE_DMA_FSMC   // Use DMA transfers to send data to the TFT
#define FSMC_DMA_DEV       DMA1
#define FSMC_DMA_CHANNEL   DMA_CH4  //fixme in F4
#define TOUCH_CS_PIN     PB6
#define TOUCH_SCK_PIN    PB3
#define TOUCH_MOSI_PIN   PB5
#define TOUCH_MISO_PIN   PB4 
#define TOUCH_INT_PIN    PB7 // PenIRQ coming from XPT2046

